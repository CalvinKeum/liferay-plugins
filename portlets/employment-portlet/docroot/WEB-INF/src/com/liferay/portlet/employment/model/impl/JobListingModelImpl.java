/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portlet.employment.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.employment.model.JobListing;
import com.liferay.portlet.employment.model.JobListingModel;
import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.Date;

/**
 * The base model implementation for the JobListing service. Represents a row in the &quot;Employment_JobListing&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.portlet.employment.model.JobListingModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link JobListingImpl}.
 * </p>
 *
 * @author Calvin Keum
 * @see JobListingImpl
 * @see com.liferay.portlet.employment.model.JobListing
 * @see com.liferay.portlet.employment.model.JobListingModel
 * @generated
 */
public class JobListingModelImpl extends BaseModelImpl<JobListing>
	implements JobListingModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a job listing model instance should use the {@link com.liferay.portlet.employment.model.JobListing} interface instead.
	 */
	public static final String TABLE_NAME = "Employment_JobListing";
	public static final Object[][] TABLE_COLUMNS = {
			{ "jobListingId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "title", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "emailAddress", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Employment_JobListing (jobListingId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,title VARCHAR(75) null,description STRING null,emailAddress VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Employment_JobListing";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.portlet.employment.model.JobListing"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.portlet.employment.model.JobListing"),
			true);

	public Class<?> getModelClass() {
		return JobListing.class;
	}

	public String getModelClassName() {
		return JobListing.class.getName();
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.portlet.employment.model.JobListing"));

	public JobListingModelImpl() {
	}

	public long getPrimaryKey() {
		return _jobListingId;
	}

	public void setPrimaryKey(long primaryKey) {
		setJobListingId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_jobListingId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public long getJobListingId() {
		return _jobListingId;
	}

	public void setJobListingId(long jobListingId) {
		_jobListingId = jobListingId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	public void setUserName(String userName) {
		_userName = userName;
	}

	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	public void setTitle(String title) {
		_title = title;
	}

	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	public void setEmailAddress(String emailAddress) {
		_emailAddress = emailAddress;
	}

	@Override
	public JobListing toEscapedModel() {
		if (isEscapedModel()) {
			return (JobListing)this;
		}
		else {
			if (_escapedModelProxy == null) {
				_escapedModelProxy = (JobListing)Proxy.newProxyInstance(_classLoader,
						_escapedModelProxyInterfaces,
						new AutoEscapeBeanHandler(this));
			}

			return _escapedModelProxy;
		}
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					JobListing.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		JobListingImpl jobListingImpl = new JobListingImpl();

		jobListingImpl.setJobListingId(getJobListingId());
		jobListingImpl.setGroupId(getGroupId());
		jobListingImpl.setCompanyId(getCompanyId());
		jobListingImpl.setUserId(getUserId());
		jobListingImpl.setUserName(getUserName());
		jobListingImpl.setCreateDate(getCreateDate());
		jobListingImpl.setModifiedDate(getModifiedDate());
		jobListingImpl.setTitle(getTitle());
		jobListingImpl.setDescription(getDescription());
		jobListingImpl.setEmailAddress(getEmailAddress());

		jobListingImpl.resetOriginalValues();

		return jobListingImpl;
	}

	public int compareTo(JobListing jobListing) {
		long primaryKey = jobListing.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		JobListing jobListing = null;

		try {
			jobListing = (JobListing)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = jobListing.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<JobListing> toCacheModel() {
		JobListingCacheModel jobListingCacheModel = new JobListingCacheModel();

		jobListingCacheModel.jobListingId = getJobListingId();

		jobListingCacheModel.groupId = getGroupId();

		jobListingCacheModel.companyId = getCompanyId();

		jobListingCacheModel.userId = getUserId();

		jobListingCacheModel.userName = getUserName();

		String userName = jobListingCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			jobListingCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			jobListingCacheModel.createDate = createDate.getTime();
		}
		else {
			jobListingCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			jobListingCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			jobListingCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		jobListingCacheModel.title = getTitle();

		String title = jobListingCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			jobListingCacheModel.title = null;
		}

		jobListingCacheModel.description = getDescription();

		String description = jobListingCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			jobListingCacheModel.description = null;
		}

		jobListingCacheModel.emailAddress = getEmailAddress();

		String emailAddress = jobListingCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			jobListingCacheModel.emailAddress = null;
		}

		return jobListingCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{jobListingId=");
		sb.append(getJobListingId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.liferay.portlet.employment.model.JobListing");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>jobListingId</column-name><column-value><![CDATA[");
		sb.append(getJobListingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = JobListing.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			JobListing.class
		};
	private long _jobListingId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _title;
	private String _description;
	private String _emailAddress;
	private transient ExpandoBridge _expandoBridge;
	private JobListing _escapedModelProxy;
}